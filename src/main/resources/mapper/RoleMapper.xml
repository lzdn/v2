<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuexi.v2.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.xuexi.v2.domain.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, description, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xuexi.v2.domain.Role">
    insert into t_role (role_id, role_name, description, 
      status)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xuexi.v2.domain.Role">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuexi.v2.domain.Role">
    update t_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuexi.v2.domain.Role">
    update t_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <resultMap id="roleRightResult" type="com.xuexi.v2.domain.Role" extends="BaseResultMap">
		<collection property="rights" ofType="com.xuexi.v2.domain.Right">
			<id column="right_id" jdbcType="INTEGER" property="rightId" />
		    <result column="right_url" jdbcType="VARCHAR" property="rightUrl" />
		    <result column="upper_right_id" jdbcType="INTEGER" property="upperRightId" />
		    <result column="right_name" jdbcType="VARCHAR" property="rightName" />
		    <result column="menu_id" jdbcType="INTEGER" property="menuId" />
		</collection>
	</resultMap>
  
   <select id="findAll"   resultMap="roleRightResult">
    select 
    t.role_id, t.role_name, t.description,t.status,t2.right_id,t2.right_url,t2.upper_right_id,t2.right_name,t2.menu_id
    from t_role t 
    left join t_role_right_relation t1 on t1.role_id = t.role_id
    left join t_right t2 on t2.right_id = t1.right_id
    where 1 = 1
  </select>
  <select id="findByUserRole" parameterType="java.lang.Integer"  resultMap="roleRightResult">
    select 
    t.role_id, t.role_name, t.description,t.status,t2.right_id,t2.right_url,t2.upper_right_id,t2.right_name,t2.menu_id
    from t_role t 
    left join t_role_right_relation t1 on t1.role_id = t.role_id
    left join t_right t2 on t2.right_id = t1.right_id
    left join t_user_role_relation t3 on t3.role_id = t.role_id
    where 1 = 1 and t3.user_id =#{userId,jdbcType=INTEGER}
  </select>
  
  <select id="findPage" parameterType="Map" resultMap="BaseResultMap">
	select
		 <include refid="Base_Column_List" />
	from t_role t
	<where>
		<if test="roleName != null">
			and t.role_name like CONCAT('%', #{roleName},'%')
		</if>
	</where>
	ORDER BY t.role_id
	</select>
	<select id="list"   resultMap="BaseResultMap">
    select 
     <include refid="Base_Column_List" />
    from t_role t   ORDER BY t.role_id
  </select>
</mapper>