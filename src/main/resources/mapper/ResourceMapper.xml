<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuexi.v2.mapper.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.xuexi.v2.domain.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="resource_key" jdbcType="VARCHAR" property="resourceKey" />
    <result column="resource_value" jdbcType="VARCHAR" property="resourceValue" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="parent_ids" jdbcType="VARCHAR" property="parentIds" />
    <result column="module_id" jdbcType="INTEGER" property="moduleId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="menu_icon" jdbcType="VARCHAR" property="menuIcon" />
    <result column="order_by" jdbcType="INTEGER" property="orderBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, resource_key, resource_value, url, parent_id, parent_ids, module_id, level, available, 
    type, menu_icon, order_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xuexi.v2.domain.Resource">
    insert into t_resource (id, resource_key, resource_value, 
      url, parent_id, parent_ids, 
      module_id, level, available, 
      type, menu_icon, order_by
      )
    values (#{id,jdbcType=INTEGER}, #{resourceKey,jdbcType=VARCHAR}, #{resourceValue,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{parentIds,jdbcType=VARCHAR}, 
      #{moduleId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{available,jdbcType=BIT}, 
      #{type,jdbcType=INTEGER}, #{menuIcon,jdbcType=VARCHAR}, #{orderBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xuexi.v2.domain.Resource">
    insert into t_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="resourceKey != null">
        resource_key,
      </if>
      <if test="resourceValue != null">
        resource_value,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="parentIds != null">
        parent_ids,
      </if>
      <if test="moduleId != null">
        module_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="menuIcon != null">
        menu_icon,
      </if>
      <if test="orderBy != null">
        order_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="resourceKey != null">
        #{resourceKey,jdbcType=VARCHAR},
      </if>
      <if test="resourceValue != null">
        #{resourceValue,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="parentIds != null">
        #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null">
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="menuIcon != null">
        #{menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null">
        #{orderBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuexi.v2.domain.Resource">
    update t_resource
    <set>
      <if test="resourceKey != null">
        resource_key = #{resourceKey,jdbcType=VARCHAR},
      </if>
      <if test="resourceValue != null">
        resource_value = #{resourceValue,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="parentIds != null">
        parent_ids = #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null">
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="menuIcon != null">
        menu_icon = #{menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null">
        order_by = #{orderBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuexi.v2.domain.Resource">
    update t_resource
    set resource_key = #{resourceKey,jdbcType=VARCHAR},
      resource_value = #{resourceValue,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      parent_ids = #{parentIds,jdbcType=VARCHAR},
      module_id = #{moduleId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      available = #{available,jdbcType=BIT},
      type = #{type,jdbcType=INTEGER},
      menu_icon = #{menuIcon,jdbcType=VARCHAR},
      order_by = #{orderBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   
   <select id="findUserResources" parameterType="Map" resultMap="BaseResultMap">
		SELECT 
			t.id,t.resource_key,t.resource_value,t.url,t.menu_icon,t.module_id,t.type,t.available  
			from t_resource t 
			LEFT JOIN t_role_resource_relation t1 on t1.resource_id = t.id
			LEFT JOIN t_role t2 on t2.role_id = t1.role_id
			LEFT JOIN t_user_role_relation t3 on t3.role_id = t2.role_id 
		where 1=1 
			and t.parent_id = #{parentId}   
			and t3.user_id = #{userId}
		order by t.id 
  </select>
 
</mapper>