<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuexi.v2.mapper.DeptMapper">
	<resultMap id="BaseResultMap" type="com.xuexi.v2.domain.Dept">
		<id column="dept_id" jdbcType="INTEGER" property="deptId" />
		<result column="parent_dept_id" jdbcType="INTEGER" property="parentDeptId" />
		<result column="dept_simple_name" jdbcType="VARCHAR" property="deptSimpleName" />
		<result column="dept_full_name" jdbcType="VARCHAR" property="deptFullName" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="parent_name" jdbcType="VARCHAR" property="parentName" />
	</resultMap>
	<sql id="Base_Column_List">
		dept_id, parent_dept_id, dept_simple_name, dept_full_name, description
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_dept
		where dept_id = #{deptId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_dept
		where dept_id = #{deptId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.xuexi.v2.domain.Dept">
		insert into t_dept (dept_id, parent_dept_id, dept_simple_name,
		dept_full_name, description)
		values (#{deptId,jdbcType=INTEGER}, #{parentDeptId,jdbcType=INTEGER},
		#{deptSimpleName,jdbcType=VARCHAR},
		#{deptFullName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.xuexi.v2.domain.Dept">
		insert into t_dept
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="deptId != null">
				dept_id,
			</if>
			<if test="parentDeptId != null">
				parent_dept_id,
			</if>
			<if test="deptSimpleName != null">
				dept_simple_name,
			</if>
			<if test="deptFullName != null">
				dept_full_name,
			</if>
			<if test="description != null">
				description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="deptId != null">
				#{deptId,jdbcType=INTEGER},
			</if>
			<if test="parentDeptId != null">
				#{parentDeptId,jdbcType=INTEGER},
			</if>
			<if test="deptSimpleName != null">
				#{deptSimpleName,jdbcType=VARCHAR},
			</if>
			<if test="deptFullName != null">
				#{deptFullName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xuexi.v2.domain.Dept">
		update t_dept
		<set>
			<if test="parentDeptId != null">
				parent_dept_id = #{parentDeptId,jdbcType=INTEGER},
			</if>
			<if test="deptSimpleName != null">
				dept_simple_name = #{deptSimpleName,jdbcType=VARCHAR},
			</if>
			<if test="deptFullName != null">
				dept_full_name = #{deptFullName,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
		</set>
		where dept_id = #{deptId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xuexi.v2.domain.Dept">
		update t_dept
		set parent_dept_id = #{parentDeptId,jdbcType=INTEGER},
		dept_simple_name = #{deptSimpleName,jdbcType=VARCHAR},
		dept_full_name = #{deptFullName,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR}
		where dept_id = #{deptId,jdbcType=INTEGER}
	</update>

	<select id="findPage" parameterType="Map" resultMap="BaseResultMap">
		select
			t.dept_id, t.parent_dept_id, t.dept_simple_name, t.dept_full_name, t.description,
			(select a.dept_full_name from t_dept a where a.dept_id = t.parent_dept_id) as parent_name
		from t_dept t
		<where>
			<if test="deptFullName != null">
				and t.dept_full_name like CONCAT('%', #{deptFullName},'%')
			</if>
		</where>
		ORDER BY t.dept_id
	</select>
	
	<select id="list" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from t_dept t  ORDER BY t.dept_id
	</select>
</mapper>